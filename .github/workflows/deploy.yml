# @format

name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v2

      # Step 2: Setup .NET SDK (for Blazor app)
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # Step 3: Clean and Install WASM workload and Restore
      - name: Clean, install workload and restore
        run: |
          # Clean any previous builds to ensure fresh .NET files
          rm -rf release/
          rm -rf SilentEar/bin/
          rm -rf SilentEar/obj/
          dotnet workload install wasm-tools
          dotnet restore SilentEar/SilentEar.csproj --force

      # Step 4: Publish the Blazor Project (clean build)
      - name: Publish .NET Project
        run: dotnet publish SilentEar/SilentEar.csproj -c Release -o release --nologo --force

      # Step 5: Add .nojekyll file to prevent Jekyll processing
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll

      # Step 6: Fix missing files after publish
      - name: Create missing files if needed
        run: |
          # Create SilentEar.styles.css if missing
          if [ ! -f "release/wwwroot/SilentEar.styles.css" ]; then
            echo "/* Generated styles */" > release/wwwroot/SilentEar.styles.css
          fi
          # Copy manifest if missing
          if [ ! -f "release/wwwroot/manifest.webmanifest" ]; then
            cp SilentEar/wwwroot/manifest.webmanifest release/wwwroot/ 2>/dev/null || echo '{"name":"SilentEar","short_name":"SilentEar","start_url":"./","display":"standalone","theme_color":"#1a1a1a"}' > release/wwwroot/manifest.webmanifest
          fi
          # Copy icons if missing
          cp SilentEar/wwwroot/icon-*.png release/wwwroot/ 2>/dev/null || true
          cp SilentEar/wwwroot/favicon.png release/wwwroot/ 2>/dev/null || true

      # Step 7: Modify base tag for GitHub Pages subdirectory deployment
      - name: Change base tag in index.html
        run: sed -i 's|<base href="/" />|<base href="/SilentEar/" />|g' release/wwwroot/index.html

      # Step 8: Deploy to GitHub Pages (force clean deployment)
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: release/wwwroot
          force: true
          clean: true
          clean-exclude: |
            .git/
