# @format

name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Setup .NET SDK (for Blazor app)
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x" # Use latest stable patch version

      # Step 3: Clean and Install WASM workload and Restore
      - name: Clean, install workload and restore
        run: |
          # Clean any previous builds to avoid version mismatches
          rm -rf release/
          rm -rf SilentEar/bin/
          rm -rf SilentEar/obj/
          rm -rf SilentEar/_framework/
          dotnet workload install wasm-tools
          dotnet restore SilentEar/SilentEar.csproj --force

      # Step 4: Publish the Blazor Project with clean build
      - name: Publish .NET Project
        run: dotnet publish SilentEar/SilentEar.csproj -c Release -o release --nologo -p:DebugType=None -p:DebugSymbols=false --force

      # Step 5: Clean up source map references
      - name: Remove source map references
        run: |
          # Remove source map references from all JS and CSS files
          find release/wwwroot -name "*.js" -exec sed -i '/\/\/# sourceMappingURL=/d' {} \; 2>/dev/null || true
          find release/wwwroot -name "*.css" -exec sed -i '/\/\*# sourceMappingURL=/d' {} \; 2>/dev/null || true
          # Remove any .map files that might exist
          find release/wwwroot -name "*.map" -delete 2>/dev/null || true

      # Step 6: Add .nojekyll file to prevent Jekyll processing
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll

      # Step 7: Fix missing files after publish and ensure proper file structure
      - name: Create missing files and copy essential assets
        run: |
          # Create SilentEar.styles.css if missing
          if [ ! -f "release/wwwroot/SilentEar.styles.css" ]; then
            echo "/* Generated styles */" > release/wwwroot/SilentEar.styles.css
          fi

          # Ensure all essential files are copied from source
          cp -f SilentEar/wwwroot/manifest.webmanifest release/wwwroot/ 2>/dev/null || echo '{"name":"SilentEar","short_name":"SilentEar","start_url":"./","display":"standalone","theme_color":"#1a1a1a"}' > release/wwwroot/manifest.webmanifest
          cp -f SilentEar/wwwroot/icon-*.png release/wwwroot/ 2>/dev/null || true
          cp -f SilentEar/wwwroot/favicon.png release/wwwroot/ 2>/dev/null || true
          cp -f SilentEar/wwwroot/service-worker.js release/wwwroot/ 2>/dev/null || true
          cp -f SilentEar/wwwroot/service-worker-assets.js release/wwwroot/ 2>/dev/null || true

          # Ensure js directory and audioRecorder.js exist
          mkdir -p release/wwwroot/js
          cp -f SilentEar/js/audioRecorder.js release/wwwroot/js/ 2>/dev/null || true
          cp -f SilentEar/wwwroot/js/audioRecorder.js release/wwwroot/js/ 2>/dev/null || true

      # Step 8: Modify base tag for GitHub Pages subdirectory deployment
      - name: Change base tag in index.html
        run: sed -i 's|<base href="/" />|<base href="/SilentEar/" />|g' release/wwwroot/index.html

      # Step 9: Fix service worker registration for better error handling
      - name: Fix service worker registration
        run: |
          sed -i 's|navigator\.serviceWorker\.register("service-worker\.js");|if ("serviceWorker" in navigator) { navigator.serviceWorker.register("service-worker.js").catch(function(error) { console.log("Service Worker registration failed:", error); }); }|g' release/wwwroot/index.html

      # Step 10: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # Target the gh-pages branch
          folder: release/wwwroot # Path to the built app
          force: true # Force push to clear cache
          clean: true # Remove old files completely
          clean-exclude: |
            .git/
            .github/
